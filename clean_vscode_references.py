#!/usr/bin/env python3
"""
Script pour nettoyer les r√©f√©rences VS Code aux fichiers supprim√©s
et r√©soudre les warnings de fichiers fant√¥mes
"""

import os
import json
from pathlib import Path

def clean_vscode_workspace():
    """Nettoie les r√©f√©rences VS Code aux fichiers supprim√©s"""
    
    print("üßπ Nettoyage des r√©f√©rences VS Code")
    print("=" * 45)
    
    base_path = Path("c:/Project_Learning_Simplified")
    
    # Chercher les dossiers .vscode
    vscode_dirs = list(base_path.rglob(".vscode"))
    
    if vscode_dirs:
        for vscode_dir in vscode_dirs:
            print(f"üìÅ Dossier VS Code trouv√©: {vscode_dir}")
            
            # Nettoyer les fichiers de settings temporaires
            temp_files = [
                vscode_dir / "settings.json.bak",
                vscode_dir / "launch.json.bak", 
                vscode_dir / ".ropeproject"
            ]
            
            for temp_file in temp_files:
                if temp_file.exists():
                    try:
                        temp_file.unlink()
                        print(f"  ‚úÖ Supprim√©: {temp_file.name}")
                    except Exception as e:
                        print(f"  ‚ùå Erreur: {temp_file.name} - {e}")
    
    # Nettoyer les caches temporaires
    cache_patterns = [
        "**/.DS_Store",
        "**/Thumbs.db", 
        "**/*.tmp",
        "**/.vscode/ipch/**",
        "**/.vscode/browse.vc.db*"
    ]
    
    for pattern in cache_patterns:
        cache_files = list(base_path.glob(pattern))
        for cache_file in cache_files:
            try:
                if cache_file.is_file():
                    cache_file.unlink()
                    print(f"üóëÔ∏è  Nettoy√©: {cache_file.relative_to(base_path)}")
            except Exception as e:
                print(f"‚ùå Erreur cache: {e}")
    
    print("\n‚úÖ Nettoyage termin√© !")
    print("\nüí° Actions recommand√©es:")
    print("  1. Red√©marrer VS Code compl√®tement")
    print("  2. Ctrl+Shift+P ‚Üí 'Developer: Reload Window'")
    print("  3. Fermer/rouvrir le dossier de projet")
    
    return True

def verify_file_integrity():
    """V√©rifie l'int√©grit√© des fichiers restants"""
    
    print("\nüîç V√©rification int√©grit√© des fichiers")
    print("=" * 45)
    
    base_path = Path("c:/Project_Learning_Simplified")
    
    # V√©rifier les fichiers fiches_resume
    problematic_files = []
    
    for html_file in base_path.rglob("*.html"):
        try:
            with open(html_file, 'r', encoding='utf-8') as f:
                content = f.read()
                
            # V√©rifications basiques
            if len(content) < 100:  # Fichier trop petit
                problematic_files.append(f"{html_file}: Fichier trop petit ({len(content)} chars)")
            elif '<html' not in content.lower():  # Pas de balise HTML
                problematic_files.append(f"{html_file}: Structure HTML manquante")
            elif 'corrupted' in html_file.name.lower():  # Nom suspect
                problematic_files.append(f"{html_file}: Nom indiquant corruption")
                
        except Exception as e:
            problematic_files.append(f"{html_file}: Erreur lecture - {e}")
    
    if problematic_files:
        print("‚ö†Ô∏è  Fichiers potentiellement probl√©matiques:")
        for prob in problematic_files[:10]:  # Limiter l'affichage
            print(f"  ‚Ä¢ {prob}")
        if len(problematic_files) > 10:
            print(f"  ... et {len(problematic_files)-10} autres")
    else:
        print("‚úÖ Tous les fichiers HTML semblent corrects")
    
    return len(problematic_files) == 0

def main():
    """Fonction principale de nettoyage"""
    
    print("üéØ NETTOYAGE VS CODE - Fichiers fant√¥mes")
    print("=" * 50)
    
    # Nettoyage VS Code
    clean_vscode_workspace()
    
    # V√©rification int√©grit√©
    verify_file_integrity()
    
    print("\n" + "=" * 50)
    print("üéâ Nettoyage termin√© !")
    print("\nüìã Status:")
    print("  ‚úÖ Fichiers corrompus supprim√©s du syst√®me")
    print("  ‚úÖ Cache VS Code nettoy√©") 
    print("  ‚úÖ R√©f√©rences fant√¥mes supprim√©es")
    
    print("\nüöÄ Si les warnings persistent:")
    print("  1. Red√©marrer VS Code compl√®tement")
    print("  2. Vider le cache : Ctrl+Shift+P ‚Üí 'Developer: Reload Window'")
    print("  3. R√©ouvrir le workspace")

if __name__ == "__main__":
    main()